filter {
  if ([fields][log_type] == "dockerStats") {
    mutate {
      replace => { "[type]" => "dockerstats"}
    }
    grok {
      match => { "message" => [ "container:%{WORD:containerId}, name:%{WORD:name}-%{WORD:port}, memoryRaw:%{NUMBER:memoryNow:float}%{NOTSPACE:unit} / %{NUMBER:memoryMax:float}%{NOTSPACE:unitTotal}, memoryPercent:%{NUMBER:memoryPercent:float}%, cpu:%{NUMBER:cpu:float}" ] }
    }
    mutate {
      add_field => {"containerName" => "%{name}-%{port}"}
    }
  } else if ([fields][log_type] == "diskUsage") {
    mutate {
      replace => { "[type]" => "diskusage" }
    }
    grok {
      match => { "message" => [ "total:%{NUMBER:total:float}%{NOTSPACE:unit} used:%{NUMBER:used:float}%{NOTSPACE:unit} available:%{NUMBER:available:float}%{NOTSPACE:unit} percent:%{NUMBER:percent:float}%" ] }
    }
  } else if ([fields][log_type] == "memUsage") {
    mutate {
      replace => { "[type]" => "memusage" }
    }
    grok {
      match => { "message" => [ "Memory total:%{NUMBER:total:float} used:%{NUMBER:used:float} available:%{NUMBER:available:float} percent:%{NUMBER:percent:float}" ] }
    }
  } else if ([fields][log_type] == "winston-backend") {
    mutate {
      replace => { "[type]" => "winstonbackend" }
    }
  } else if ([fields][log_type] == "winston-portal") {
    mutate {
      replace => { "[type]" => "winstonportal" }
    }
    mutate {
      add_field => { "caseID" => "%{[json][@fields][user]}-%{[json][@fields][motivo]}-%{[json][@fields][ipVM]}" }
    }
    if ([json][@fields][accion] == "loaded") {
      mutate {
        add_field => { "final" => "si" }
      }
      # de https://www.elastic.co/guide/en/logstash/7.3/lookup-enrichment.html#es-def
      elasticsearch {
        # hosts => ["localhost"]
        query => "json.@fields.accion:load AND json.@fields.user:%{[json][@fields][user]} AND json.@fields.motivo:%{[json][@fields][motivo]} AND json.@fields.ipVM:%{[json][@fields][ipVM]}"
        fields => { "json.@timestamp" => "started" }
      }
      date {
          match => ["[started]", "ISO8601"]
          target => "[started]"
      }
      ruby {
        code => 'event.set("duration_min", (event.get("json.@timestamp") - event.get("started")) / 60) rescue nil'
      }
    }
    if ([json][@fields][accion] == "stopped") {
      mutate {
        add_field => { "final" => "stop" }
      }
      # de https://www.elastic.co/guide/en/logstash/7.3/lookup-enrichment.html#es-def
      elasticsearch {
        # hosts => ["localhost"]
        query => "json.@fields.accion:stop AND json.@fields.user:%{[json][@fields][user]} AND json.@fields.motivo:%{[json][@fields][motivo]} AND json.@fields.ipVM:%{[json][@fields][ipVM]}"
        fields => { "json.@timestamp" => "started" }
      }
      date {
          match => ["[started]", "ISO8601"]
          target => "[started]"
      }
      ruby {
        code => 'event.set("duration_min", (event.get("json.@timestamp") - event.get("started")) / 60) rescue nil'
      }
    }
  }
}
